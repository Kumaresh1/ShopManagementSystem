# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ddd.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from openpyxl import load_workbook
from datetime import date





class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(979, 792)
        MainWindow.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(255, 0, 0, 255), stop:0.166 rgba(255, 255, 0, 255), stop:0.333 rgba(0, 255, 0, 255), stop:0.5 rgba(0, 255, 255, 255), stop:0.666 rgba(0, 0, 255, 255), stop:0.833 rgba(255, 0, 255, 255), stop:1 rgba(255, 0, 0, 255));\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(180, 0, 411, 80))
        self.frame.setStyleSheet("background-color: rgb(255, 255, 0);\n"
"color: rgb(255, 0, 0);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_8 = QtWidgets.QLabel(self.frame)
        self.label_8.setGeometry(QtCore.QRect(30, 10, 361, 61))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 150, 161, 71))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: qradialgradient(spread:repeat, cx:0.5, cy:0.5, radius:0.077, fx:0.5, fy:0.5, stop:0 rgba(0, 169, 255, 147), stop:0.497326 rgba(0, 0, 0, 147), stop:1 rgba(0, 169, 255, 147));\n"
"color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(210, 140, 141, 71))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit.setFont(font)
        self.plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(660, 90, 301, 541))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_2.setFont(font)
        self.plainTextEdit_2.setStyleSheet("background-color: rgb(255, 0, 127);\n"
"color: rgb(255, 255, 255);")
        self.plainTextEdit_2.setPlainText("")
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(360, 570, 241, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell Extra Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setStyleSheet("QPushButton#pushButton_2:hover {\n"
"  background-color: white; \n"
"  color: black; \n"
"  border: 2px solid #4CAF50;\n"
"}\n"
"\n"
"QPushButton#pushButton_2 {\n"
"  background-color: #4CAF50;\n"
"  color: white;\n"
"}\n"
"")
        self.pushButton_2.setObjectName("pushButton_2")
        self.plainTextEdit_6 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_6.setGeometry(QtCore.QRect(760, 650, 201, 101))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_6.setFont(font)
        self.plainTextEdit_6.setStyleSheet("background-color: rgb(0, 85, 0);\n"
"color: rgb(255, 255, 255);")
        self.plainTextEdit_6.setPlainText("")
        self.plainTextEdit_6.setObjectName("plainTextEdit_6")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(20, 470, 281, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell Extra Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_3.setStyleSheet("\n"
"QPushButton#pushButton_3:hover {\n"
"  background-color: white; \n"
"  color: black; \n"
"  border: 2px solid #008CBA;\n"
"}\n"
"\n"
"QPushButton#pushButton_3 {\n"
"  background-color: #008CBA;\n"
"  color: white;\n"
"}\n"
"")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(540, 150, 91, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell Extra Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_4.setStyleSheet("  background-color: #f44336;\n"
"  color: white;\n"
"")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(20, 570, 281, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell Extra Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_5.setStyleSheet("QPushButton#pushButton_5:hover {\n"
"  background-color: white;\n"
"  color: black;\n"
"  border: 2px solid #555555;\n"
"}\n"
"\n"
"QPushButton#pushButton_5 {\n"
"  background-color: #555555;\n"
"  color: white;\n"
"}\n"
"")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(540, 300, 91, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell Extra Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_6.setStyleSheet(" background-color: #f44336;\n"
"  color: white;\n"
"\n"
"")
        self.pushButton_6.setObjectName("pushButton_6")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(237, 220, 75, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: qconicalgradient(cx:0, cy:0, angle:135, stop:0 rgba(255, 255, 0, 69), stop:0.375 rgba(255, 255, 0, 69), stop:0.423533 rgba(251, 255, 0, 145), stop:0.45 rgba(247, 255, 0, 208), stop:0.477581 rgba(255, 244, 71, 130), stop:0.518717 rgba(255, 218, 71, 130), stop:0.55 rgba(255, 255, 0, 255), stop:0.57754 rgba(255, 203, 0, 130), stop:0.625 rgba(255, 255, 0, 69), stop:1 rgba(255, 255, 0, 69));")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(380, 370, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: qconicalgradient(cx:0, cy:0, angle:135, stop:0 rgba(255, 255, 0, 69), stop:0.375 rgba(255, 255, 0, 69), stop:0.423533 rgba(251, 255, 0, 145), stop:0.45 rgba(247, 255, 0, 208), stop:0.477581 rgba(255, 244, 71, 130), stop:0.518717 rgba(255, 218, 71, 130), stop:0.55 rgba(255, 255, 0, 255), stop:0.57754 rgba(255, 203, 0, 130), stop:0.625 rgba(255, 255, 0, 69), stop:1 rgba(255, 255, 0, 69));")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 300, 161, 71))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: qradialgradient(spread:repeat, cx:0.5, cy:0.5, radius:0.077, fx:0.5, fy:0.5, stop:0 rgba(0, 169, 255, 147), stop:0.497326 rgba(0, 0, 0, 147), stop:1 rgba(0, 169, 255, 147));\n"
"color: rgb(255, 255, 255);")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(237, 370, 75, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: qconicalgradient(cx:0, cy:0, angle:135, stop:0 rgba(255, 255, 0, 69), stop:0.375 rgba(255, 255, 0, 69), stop:0.423533 rgba(251, 255, 0, 145), stop:0.45 rgba(247, 255, 0, 208), stop:0.477581 rgba(255, 244, 71, 130), stop:0.518717 rgba(255, 218, 71, 130), stop:0.55 rgba(255, 255, 0, 255), stop:0.57754 rgba(255, 203, 0, 130), stop:0.625 rgba(255, 255, 0, 69), stop:1 rgba(255, 255, 0, 69));")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(380, 220, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: qconicalgradient(cx:0, cy:0, angle:135, stop:0 rgba(255, 255, 0, 69), stop:0.375 rgba(255, 255, 0, 69), stop:0.423533 rgba(251, 255, 0, 145), stop:0.45 rgba(247, 255, 0, 208), stop:0.477581 rgba(255, 244, 71, 130), stop:0.518717 rgba(255, 218, 71, 130), stop:0.55 rgba(255, 255, 0, 255), stop:0.57754 rgba(255, 203, 0, 130), stop:0.625 rgba(255, 255, 0, 69), stop:1 rgba(255, 255, 0, 69));")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(630, 10, 91, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 85, 0);")
        self.label_7.setObjectName("label_7")
        self.plainTextEdit_10 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_10.setGeometry(QtCore.QRect(890, 10, 71, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_10.setFont(font)
        self.plainTextEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit_10.setObjectName("plainTextEdit_10")
        self.plainTextEdit_11 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_11.setGeometry(QtCore.QRect(810, 10, 71, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_11.setFont(font)
        self.plainTextEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit_11.setPlainText("")
        self.plainTextEdit_11.setObjectName("plainTextEdit_11")
        self.plainTextEdit_12 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_12.setGeometry(QtCore.QRect(730, 10, 71, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_12.setFont(font)
        self.plainTextEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit_12.setPlainText("")
        self.plainTextEdit_12.setObjectName("plainTextEdit_12")
        self.plainTextEdit_3 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_3.setGeometry(QtCore.QRect(370, 290, 141, 71))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_3.setFont(font)
        self.plainTextEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit_3.setPlainText("")
        self.plainTextEdit_3.setObjectName("plainTextEdit_3")
        self.plainTextEdit_4 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_4.setGeometry(QtCore.QRect(370, 140, 141, 71))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_4.setFont(font)
        self.plainTextEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit_4.setPlainText("")
        self.plainTextEdit_4.setObjectName("plainTextEdit_4")
        self.plainTextEdit_5 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_5.setGeometry(QtCore.QRect(210, 290, 141, 71))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.plainTextEdit_5.setFont(font)
        self.plainTextEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 0, 0);")
        self.plainTextEdit_5.setPlainText("")
        self.plainTextEdit_5.setObjectName("plainTextEdit_5")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 20, 111, 71))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(0, 85, 127);\n"
"color: rgb(255, 255, 127);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(350, 470, 251, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell Extra Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_7.setStyleSheet("QPushButton#pushButton_5:hover {\n"
"  background-color: white;\n"
"  color: black;\n"
"  border: 2px solid #555555;\n"
"}\n"
"\n"
"QPushButton#pushButton_5 {\n"
"  background-color: #555555;\n"
"  color: white;\n"
"}\n"
"")
        self.pushButton_7.setObjectName("pushButton_7")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(660, 670, 91, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 0);")
        self.label_9.setObjectName("label_9")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 979, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.setdate()
        self.pushButton_4.clicked.connect(self.writedata)
        self.pushButton_6.clicked.connect(self.writedata1)
        self.pushButton_5.clicked.connect(self.showin)
        self.pushButton_3.clicked.connect(self.showexp)
        self.pushButton.clicked.connect(self.reset)
        self.pushButton_7.clicked.connect(self.month)
        self.pushButton_2.clicked.connect(self.calc)
        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def setdate(self):
        today = date.today()
        ##print("Today's date:",str( today))
        a=str(today)
        dt=a[8:10]
        mn=a[5:7]
        ye=a[2:4]
        print(dt,mn,ye)

        self.plainTextEdit_12.clear();
        self.plainTextEdit_11.clear();
        self.plainTextEdit_10.clear();

        self.plainTextEdit_12.insertPlainText(str(dt));
        self.plainTextEdit_11.insertPlainText(str(mn));
        self.plainTextEdit_10.insertPlainText(str(ye));

        

    def askdate(self):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)

        msg.setText("? Error : ")
        msg.setInformativeText("Enter Date ")
        msg.setWindowTitle("ERROR")
        msg.setDetailedText("")
        msg.exec()



    def showexp(self):
        print("exp")
        
                
        day=self.plainTextEdit_12.toPlainText()
        mon=self.plainTextEdit_11.toPlainText()
        yr=self.plainTextEdit_10.toPlainText()

        
        if(len(day) ==0 or len(mon)==0):
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)

            msg.setText("ENTER DATE ")
            msg.setInformativeText("")
            msg.setWindowTitle("ERROR")
            msg.setDetailedText("")
            msg.exec()
            return

        else:
            date=day+"/"+mon+"/"+yr
            
        
        wb = load_workbook('details.xlsx')
        print("showin",date)
        
        ws = wb['Sheet1']
        f=1
        sm=0
        flag=0
        tr=[]
        
        while(flag!=1):
            f+=1
            if(ws[str("G"+str(f))].value!=None and ws[str("E"+str(f))].value==date):
                tr.append(ws["G"+str(f)].value)
            elif(ws[str("G"+str(f))].value==None):
                flag=1
        print(tr)
        for i in tr:
            print(type(i))
            sm+=int(i)
            self.plainTextEdit_2.insertPlainText(str(i)+"\n");
            print("ssss",sm)
        print("gere")
        self.plainTextEdit_6.insertPlainText(str(sm));
        return sm
        print("ggg")

    def calc(self):

        day=self.plainTextEdit_12.toPlainText()
        mon=self.plainTextEdit_11.toPlainText()
        if(len(day)==0 or len(mon)==0):
            self.askdate()
            
            return
        else:
            i=self.showin()
            e=self.showexp()
        print("yesssssss",i,e)
        c=int(i)-int(e)
        self.reset()
        
        self.plainTextEdit_6.insertPlainText(str(c));
        self.plainTextEdit_2.insertPlainText("INCOME :\n"+str(i));
        self.plainTextEdit_2.insertPlainText("\nEXPENSE :\n"+str(e));
        
        

    def month(self):
        day=self.plainTextEdit_12.toPlainText()
        mon=self.plainTextEdit_11.toPlainText()
        yr=self.plainTextEdit_10.toPlainText()

        
        if(len(mon)==0):
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)

            msg.setText("ENTER MONTH ")
            msg.setInformativeText("")
            msg.setWindowTitle("ERROR")
            msg.setDetailedText("")
            msg.exec()
            return

        else:
            date=day+"/"+mon+"/"+yr
            
        
        wb = load_workbook('details.xlsx')
        ##wb1 = load_workbook('details.xlsx')
        
        ws = wb['Sheet1']
        ws1=wb['Sheet2']
        f=1
        sm=0
        flag=0
        tr=[]
        mt=""
        
        while(flag!=1):
            f+=1
            if(ws[str("G"+str(f))].value!=None  ):
                mt=ws[str("E"+str(f))].value
                print("exp",mt[3:5])
                if(mt[3:5]==mon):
                    
                    tr.append(ws["G"+str(f)].value)
            elif(ws[str("G"+str(f))].value==None):
                flag=1
        print("exp",tr)
        for i in tr:
            ##print(type(i))
            sm+=int(i)
            
            print("exp sum",sm)
        ##self.plainTextEdit_6.insertPlainText(str(i)+"\n");
        
        
        
        fi=1
        smi=0
        flagi=0
        tri=[]
        mti=""
        
        while(flagi!=1):
            fi+=1
            if(ws[str("C"+str(fi))].value!=None  ):
                mti=ws[str("A"+str(fi))].value
                print("INC MONTH ----",mti[3:5])
                if(mti[3:5]==mon):
                    
                    tri.append(ws["C"+str(fi)].value)
            elif(ws[str("C"+str(fi))].value==None):
                flagi=1
        print("inc",tri)

        for i in tri:
            
            smi+=int(i)
        self.plainTextEdit_2.insertPlainText("INCOME :\n"+str(smi)+"\n");
        ws1[str("B"+str(int(mon)+1))]=smi
        self.plainTextEdit_2.insertPlainText("\nEXPENSE :\n"+str(sm));
        ws1[str("C"+str(int(mon)+1))]=sm
        self.plainTextEdit_6.insertPlainText(str(smi-sm));
        ws1[str("D"+str(int(mon)+1))]=smi-sm
        wb.save("details.xlsx")

    def reset(self):
        self.plainTextEdit_2.clear()
        
        self.plainTextEdit_3.clear()
        self.plainTextEdit_4.clear()
        self.plainTextEdit.clear()
        self.plainTextEdit_6.clear()
        self.setdate()
        

    def showin(self):
        print("sin")
        day=self.plainTextEdit_12.toPlainText()
        mon=self.plainTextEdit_11.toPlainText()
        yr=self.plainTextEdit_10.toPlainText()
        if(len(day) ==0 or len(mon)==0):
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)

            msg.setText("ENTER DATE ")
            msg.setInformativeText("")
            msg.setWindowTitle("ERROR")
            msg.setDetailedText("")
            msg.exec()
            return

        else:
            date=day+"/"+mon+"/"+yr
            
        
            
        
        wb = load_workbook('details.xlsx')
        print("showin",date)
        
        ws = wb['Sheet1']
        f=1
        sm=0
        flag=0
        tr=[]
        
        while(flag!=1):
            f+=1
            if(ws[str("C"+str(f))].value!=None and ws[str("A"+str(f))].value==date):
                tr.append(ws["C"+str(f)].value)
            elif(ws[str("B"+str(f))].value==None):
                flag=1
        print(tr)
        for i in tr:
            
            sm+=int(i)
            self.plainTextEdit_2.insertPlainText(str(i)+"\n");
            print("ssss",sm)
        print("gere")
        self.plainTextEdit_6.insertPlainText(str(sm));
        return sm
        print("ggg")


    def writedata(self):
        ##amt
        print("hii")
        b = self.plainTextEdit.toPlainText()
        self.plainTextEdit.clear()
        a=self.plainTextEdit_4.toPlainText()
        self.plainTextEdit_4.clear()
        day=self.plainTextEdit_12.toPlainText()
        mon=self.plainTextEdit_11.toPlainText()
        yr=self.plainTextEdit_10.toPlainText()
        ##date=day+"/"+mon+"/"+yr
        if(len(day) ==0 or len(mon)==0):
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)

            msg.setText("? Error : ")
            msg.setInformativeText("Enter Date ")
            msg.setWindowTitle("ERROR")
            msg.setDetailedText("")
            msg.exec()
            return

        else:
             date=day+"/"+mon+"/"+yr
        print(a,b,date)
        wb = load_workbook('details.xlsx')
        
        ws = wb['Sheet1']
        f=1
        print("nga")
        flag=0
        
        while(flag!=1):
            f+=1
            if(ws[str("A"+str(f))].value==None):
                date=day+"/"+mon+"/"+yr

                ws["A"+str(f)] = date
                flag=1
        if(len(b)==0):
            
            ws["B"+str(f)] = "UNKNOWN"
            ws["C"+str(f)] = a
        else:
            ws["B"+str(f)] = b
            ws["C"+str(f)] = a
        
        wb.save('details.xlsx')
        
    def writedata1(self):
            ##amt
        wb = load_workbook('details.xlsx')
        b = self.plainTextEdit_5.toPlainText()
        self.plainTextEdit_5.clear()
        a=self.plainTextEdit_3.toPlainText()
        self.plainTextEdit_3.clear()
        day=self.plainTextEdit_12.toPlainText()
        mon=self.plainTextEdit_11.toPlainText()
        yr=self.plainTextEdit_10.toPlainText()
        print(a,b)
        
        
        if(len(day) ==0 or len(mon)==0):
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)

            msg.setText("? Error : ")
            msg.setInformativeText("Enter Date ")
            msg.setWindowTitle("ERROR")
            msg.setDetailedText("")
            msg.exec()
            return

        else:
         date=day+"/"+mon+"/"+yr
        
        ws = wb['Sheet1']
        f=1
        ##print("nga")
        flag=0
        
        while(flag!=1):
            f+=1
            if(ws[str("E"+str(f))].value==None):
                date=day+"/"+mon+"/"+yr

                ws["E"+str(f)] = date
                flag=1
        if(len(b)==0):
            
            ws["F"+str(f)] = "UNKNOWN"
            ws["G"+str(f)] = a
        else:
            ws["F"+str(f)] = b
            ws["G"+str(f)] = a
        
        wb.save('details.xlsx')


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_8.setText(_translate("MainWindow", "VETRI GRAPHICS"))
        self.label.setText(_translate("MainWindow", " INCOME"))
        self.pushButton_2.setText(_translate("MainWindow", "TODAY"))
        self.pushButton_3.setText(_translate("MainWindow", "SHOW EXPENSES"))
        self.pushButton_4.setText(_translate("MainWindow", "OK"))
        self.pushButton_5.setText(_translate("MainWindow", "SHOW INCOME"))
        self.pushButton_6.setText(_translate("MainWindow", "OK"))
        self.label_2.setText(_translate("MainWindow", "TYPE"))
        self.label_3.setText(_translate("MainWindow", "AMOUNT"))
        self.label_4.setText(_translate("MainWindow", "EXPENSES"))
        self.label_5.setText(_translate("MainWindow", " TYPE"))
        self.label_6.setText(_translate("MainWindow", "AMOUNT"))
        self.label_7.setText(_translate("MainWindow", " DATE :"))
        self.plainTextEdit_10.setPlainText(_translate("MainWindow", "21"))
        self.pushButton.setText(_translate("MainWindow", "RESET"))
        self.pushButton_7.setText(_translate("MainWindow", "MONTHLY"))
        self.label_9.setText(_translate("MainWindow", " TOTAL"))



if __name__ == "__main__":
    import sys
    
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    MainWindow.setWindowTitle("Vetri Xerox")
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

